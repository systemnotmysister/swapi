[{"C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\index.js":"1","C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\App.js":"2","C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\components\\AppRouter.js":"4","C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\components\\Facebook.js":"5","C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\components\\Swapi.js":"6","C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\components\\ExactHero.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":265,"mtime":1615294835856,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":683,"mtime":1615294894084,"results":"12","hashOfConfig":"9"},{"size":2005,"mtime":1615294597512,"results":"13","hashOfConfig":"9"},{"size":1869,"mtime":1615351981266,"results":"14","hashOfConfig":"9"},{"size":4043,"mtime":1615298723594,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3zo6r7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\index.js",[],["36","37"],"C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\App.js",[],"C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\components\\AppRouter.js",["38","39","40"],"import React, { Component, useState, useContext } from \"react\";\r\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\r\nimport ExactHero from \"./ExactHero\";\r\nimport Facebook, { Context } from \"./Facebook\";\r\nimport Swapi from \"./Swapi\";\r\n\r\nfunction AppRouter(props) {\r\n  return (\r\n    // null\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Context.Provider>\r\n          <Facebook />\r\n        </Context.Provider>\r\n      </Route>\r\n\r\n      <Route path=\"/swapi\">\r\n        <Swapi />\r\n      </Route>\r\n\r\n      <Route path=\"/people/:id\">\r\n        <ExactHero />\r\n      </Route>\r\n\r\n      {/* </LoginContext.Provider> */}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\components\\Facebook.js",["41"],"import React, { Component, useState, createContext } from \"react\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ExactHero from \"./ExactHero\";\r\nimport Swapi from \"./Swapi\";\r\n\r\nexport let Context = createContext();\r\n\r\nexport default function Facebook() {\r\n  const [loginState, setLoginState] = useState({\r\n    connected: false,\r\n  });\r\n\r\n  let history = useHistory();\r\n\r\n  let fbContent;\r\n\r\n  const LogOut = () => {\r\n    setLoginState({ connected: false });\r\n  };\r\n\r\n  const componentClicked = () => {\r\n    console.log(\"clicked\");\r\n  };\r\n\r\n  const responseFacebook = (response) => {\r\n    if (response.name) {\r\n      //if success\r\n      console.log(\"authenticaition succeded!\", response);\r\n      setLoginState({ connected: true });\r\n      Context = { connected: true };\r\n      // console.log(\"connected = true\");\r\n\r\n      <Context.Provider value={Context}>\r\n        <Context.Consumer>\r\n          {\" \"}\r\n          <ExactHero />\r\n          <Swapi />\r\n        </Context.Consumer>\r\n      </Context.Provider>;\r\n      console.log(Context);\r\n    } else console.log(\"not logged in\");\r\n  };\r\n\r\n  if (loginState.connected) {\r\n    return (\r\n      <div>\r\n        <h1>you are already logged in </h1>\r\n        <div>\r\n          {\" \"}\r\n          <button onClick={() => LogOut()}>Back</button>{\" \"}\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <button onClick={() => history.push(\"/swapi\")}> Show Heroes</button>\r\n        </div>\r\n        {/* {<Swapi loginState={loginState} />} */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  fbContent = (\r\n    <FacebookLogin\r\n      appId=\"1112037659237523\"\r\n      autoLoad={true}\r\n      fields=\"name,email,picture\"\r\n      onClick={componentClicked}\r\n      callback={responseFacebook}\r\n    />\r\n  );\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <h1 className=\"title\">\r\n        Hi , here you can learn more about Star Wars heroes\r\n      </h1>\r\n      <p>To get started, auth via Facebook</p>\r\n      {fbContent}{\" \"}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\components\\Swapi.js",["42"],"import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Context } from \"./Facebook\";\r\nexport let contextID = createContext();\r\n\r\nexport default function Swapi() {\r\n  useContext({ Context });\r\n  let history = useHistory();\r\n  const url = \"https://swapi.dev/api/people/\";\r\n  const [data, setData] = useState(null);\r\n  console.log(Context, \"swapi context before fetch\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (Context.connected) {\r\n        const response = await fetch(url);\r\n        const json = await response.json();\r\n        setData(json);\r\n        console.log(json);\r\n        console.log(Context, \"this is context in swapi due to fectch\");\r\n      }\r\n    };\r\n    fetchData();\r\n    return data;\r\n  }, []);\r\n\r\n  if (!Context.connected)\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <h1>you are not connected</h1>\r\n        <button onClick={() => history.push(\"/\")}> Back To Login</button>\r\n      </div>\r\n    );\r\n\r\n  if (!data) return <> Loading...</>;\r\n  console.log(Context, \"swapi context after fetch\");\r\n\r\n  if (data) {\r\n    return (\r\n      <div>\r\n        {data.results.map((it, index) => (\r\n          <Link to={`/people/${index + 1}`} style={{ color: \"black\" }}>\r\n            {\" \"}\r\n            <ul>\r\n              {\" \"}\r\n              <li className=\"hlist\">{it.name} </li>{\" \"}\r\n            </ul>\r\n          </Link>\r\n        ))}\r\n        <button className=\"hlistbtn\" onClick={() => history.push(\"/\")}>\r\n          {\" \"}\r\n          Back To Login\r\n        </button>{\" \"}\r\n      </div>\r\n    );\r\n  } else\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <h1>you are not connected</h1>\r\n        <button className=\"hlistbtn\" onClick={() => history.push(\"/\")}>\r\n          {\" \"}\r\n          Back To Login\r\n        </button>\r\n      </div>\r\n    );\r\n}\r\n",["43","44"],"C:\\Users\\User\\Desktop\\projects\\SWAPI\\swapi-test-app\\src\\components\\ExactHero.js",["45","46","47","48","49","50","51","52"],"import React, { Component, useEffect, useState, useContext } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { Context } from \"./Facebook\";\r\nimport { Card } from \"antd\";\r\nimport { Button } from \"antd\";\r\n\r\nexport default function ExactHero(props) {\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n  useContext({ Context });\r\n  let url = `https://swapi.dev/api/people/${id}/`;\r\n  const [data, setData] = useState(null);\r\n  const [homeWorldName, setHomeWorldName] = useState(null);\r\n  const [filmsTitle, setFilmsTitle] = useState(null);\r\n  const [vehicles, setVichles] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (Context.connected) {\r\n        const response = await fetch(url);\r\n        const json = await response.json();\r\n        setData(json);\r\n        console.log(\"EXACT HERO JSON \", json);\r\n\r\n        const homeworldRes = await fetch(json.homeworld);\r\n        const resName = await homeworldRes.json();\r\n        setHomeWorldName(resName.name);\r\n        console.log(resName.name, \" - fetch respone (homeworld.name)\");\r\n        console.log(json.films);\r\n\r\n        Promise.all(\r\n          json.films.map((url) => fetch(url).then((resp) => resp.json()))\r\n        ).then((resp) => {\r\n          setFilmsTitle(resp.map((it) => it.title));\r\n          //   console.log(resp.map((it) => it.title));\r\n        });\r\n\r\n        Promise.all(\r\n          json.vehicles.map((url) => fetch(url).then((resp) => resp.json()))\r\n        ).then((resp) => {\r\n          setVichles(resp.map((it) => [it.name, it.model]));\r\n          console.log(vehicles);\r\n        });\r\n        console.log(vehicles, \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");\r\n      } else {\r\n        return (\r\n          <div>\r\n            {\" \"}\r\n            <h1>you are not connected</h1>\r\n            <button onClick={() => history.push(\"/\")}> Back To Login</button>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n    fetchData();\r\n    return data, homeWorldName, filmsTitle;\r\n\r\n    // console.log(\"login via facebook to continue..\");\r\n  }, []);\r\n  if (!Context.connected) {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <h1>you are not connected</h1>\r\n        <button onClick={() => history.push(\"/\")}> Back To Login</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!filmsTitle) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (data) {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <div className=\"hswrapper\">\r\n          <ul>\r\n            <li>\r\n              <ul> name: {data.name}</ul>\r\n              <ul> height: {data.height}</ul>\r\n              <ul> mass: {data.mass}</ul>\r\n              <ul> hair_color: {data.hair_color}</ul>\r\n              <ul> skin_color : {data.skin_color}</ul>\r\n              <ul> eye_color: {data.eye_color}</ul>\r\n              <ul> birth_year: {data.birth_year}</ul>\r\n              <ul> gender: {data.gender}</ul>\r\n              <ul> homeworld: {homeWorldName} </ul>\r\n              <ul type=\"text\"> films: {filmsTitle.join(\", \")} </ul>\r\n              <ul type=\"text\"> vehicles: {vehicles.join(\",\")}</ul>\r\n            </li>\r\n          </ul>\r\n        </div>{\" \"}\r\n        <div>\r\n          <button className=\"hsbtn\" onClick={() => history.push(\"/swapi\")}>\r\n            {\" \"}\r\n            Back to Heroes{\" \"}\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n    {\r\n      /* <div className=\"hswrapper\">\r\n        <ul>\r\n          <li>\r\n            <ul> name: {data.name}</ul>\r\n            <ul> height: {data.height}</ul>\r\n            <ul> mass: {data.mass}</ul>\r\n            <ul> hair_color: {data.hair_color}</ul>\r\n            <ul> skin_color : {data.skin_color}</ul>\r\n            <ul> eye_color: {data.eye_color}</ul>\r\n            <ul> birth_year: {data.birth_year}</ul>\r\n            <ul> gender: {data.gender}</ul>\r\n            <ul> homeworld: {homeWorldName} </ul>\r\n            <ul type=\"text\"> films: {filmsTitle.join(\", \")} </ul>\r\n            <ul type=\"text\"> vehicles: {vehicles.join(\",\")}</ul>\r\n          </li>\r\n        </ul>\r\n\r\n      </div> */\r\n    }\r\n  }\r\n}\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"61","line":1,"column":28,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"62","line":1,"column":38,"nodeType":"59","messageId":"60","endLine":1,"endColumn":48},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"64","line":25,"column":6,"nodeType":"65","endLine":25,"endColumn":8,"suggestions":"66"},{"ruleId":"53","replacedBy":"67"},{"ruleId":"55","replacedBy":"68"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"69","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},{"ruleId":"57","severity":1,"message":"70","line":4,"column":10,"nodeType":"59","messageId":"60","endLine":4,"endColumn":14},{"ruleId":"57","severity":1,"message":"71","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":56,"column":16,"nodeType":"74","messageId":"75","endLine":56,"endColumn":17},{"ruleId":"63","severity":1,"message":"76","line":59,"column":6,"nodeType":"65","endLine":59,"endColumn":8,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":103,"column":5,"nodeType":"80","messageId":"81","endLine":122,"endColumn":6},{"ruleId":"82","severity":1,"message":"83","line":103,"column":5,"nodeType":"80","messageId":"84","endLine":122,"endColumn":6},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["87"],["85"],["86"],"'Link' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has missing dependencies: 'data', 'filmsTitle', 'history', 'homeWorldName', 'url', and 'vehicles'. Either include them or remove the dependency array.",["88"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [data]",{"range":"93","text":"94"},"Update the dependencies array to be: [data, filmsTitle, history, homeWorldName, url, vehicles]",{"range":"95","text":"96"},[820,822],"[data]",[2079,2081],"[data, filmsTitle, history, homeWorldName, url, vehicles]"]